{
  "about": {
    "loadingError": "Failed to load about content...",
    "aboutTitle": "About",
    "aboutDescription": "You can set the about content in the settings page, supports HTML & Markdown",
    "projectRepo": "Project repository:"
  },
  "registerForm": {
    "enterEmail": "Please enter your email",
    "turnstileError": "Please try again in a few seconds, Turnstile is checking the user environment!",
    "usernameRequired": "Username is required",
    "passwordRequired": "Password is required",
    "confirmPasswordRequired": "Confirm password is required",
    "passwordsNotMatch": "Passwords do not match",
    "validEmailRequired": "Must be a valid email address",
    "emailRequired": "Email is required",
    "verificationCodeRequired": "Verification code is required",
    "resendCode": "Resend({{countdown}})",
    "getCode": "Get verification code",
    "verificationInfo": "Please try again in a few seconds, Turnstile is checking the user environment!",
    "restSendEmail": "The reset email was sent successfully, please check your email!"
  },
  "registerPage": {
    "alreadyHaveAccount": "Already have an account? Click to login"
  },
  "topupPage": {
    "alertMessage": "Please check the recharge records and invitation records in the logs. For recharge records, select the type [Recharge] in the log; for invitation records, select [System] in the log."
  },
  "logPage": {
    "title": "Logs",
    "refreshButton": "Refresh/Clear Search",
    "searchButton": "Search",
    "timeLabel": "Time",
    "channelLabel": "Channel",
    "userLabel": "User",
    "tokenLabel": "Token",
    "typeLabel": "Type",
    "modelLabel": "Model",
    "durationLabel": "Duration",
    "inputLabel": "Input",
    "outputLabel": "Output",
    "quotaLabel": "Quota",
    "detailLabel": "Detail",
    "searchLogsInfo": "Please check the recharge records and invitation records in the logs. For recharge records, select the type [Recharge] in the log; for invitation records, select [System] in the log."
  },
  "tableToolBar": {
    "tokenName": "Token Name",
    "modelName": "Model Name",
    "startTime": "Start Time",
    "endTime": "End Time",
    "type": "Type",
    "channelId": "Channel ID",
    "channelIdPlaceholder": "Channel ID",
    "taskId": "Task ID",
    "taskIdPlaceholder": "Task ID",
    "username": "Username"
  },
  "redemptionPage": {
    "pageTitle": "Redemption Management",
    "createRedemptionCode": "Create Redemption Code",
    "successMessage": "Operation successful",
    "searchPlaceholder": "Search redemption code...",
    "refreshButton": "Refresh",
    "headLabels": {
      "id": "ID",
      "name": "Name",
      "status": "Status",
      "quota": "Quota",
      "createdTime": "Created Time",
      "redeemedTime": "Redeemed Time",
      "action": "Action"
    },
    "del": "Delete redemption code",
    "delTip": "Whether to delete the redemption code",
    "unredeemed": "Not yet redeemed"
  },
  "topupCard": {
    "topup": "Top up",
    "topupsuccess": "Top up successful!",
    "amount": "Top up amount",
    "currentQuota": "Current quota",
    "onlineTopup": "Online top-up",
    "inputLabel": "Redemption code",
    "inputPlaceholder": "Enter redemption code!",
    "exchangeButton": {
      "default": "Exchange",
      "submitting": "Submitting"
    },
    "selectPaymentMethod": "Select payment method",
    "amountMinLimit": "Amount cannot be less than",
    "amountMaxLimit": "Amount cannot exceed 1000000",
    "positiveIntegerAmount": "Please enter a positive integer amount",
    "topupAmount": "Top up amount",
    "discountedPrice": "Discounted price",
    "fee": "Fee",
    "actualAmountToPay": "Actual amount to pay",
    "adminSetupRequired": "Admin setup required!",
    "redemptionCodeTopup": "Redemption code top-up",
    "noRedemptionCodeText": "No redemption code yet? Click to get redemption code:",
    "getRedemptionCode": "Get redemption code",
    "exchangeRate": "Exchange rate"
  },
  "inviteCard": {
    "inviteReward": "Invite Reward",
    "inviteDescription": "Share your invite link, invite friends to register, and get rewarded!",
    "inviteUrlLabel": "Invite Link",
    "generateInvite": "Generate Invite Link",
    "copyButton": {
      "copy": "Copy",
      "generate": "Generate"
    }
  },
  "midjourneyPage": {
    "midjourney": "Midjourney",
    "refreshClearSearch": "Refresh / Clear Search Criteria",
    "search": "Search",
    "taskID": "Task ID",
    "submitTime": "Submit Time",
    "channel": "Channel",
    "user": "User",
    "type": "Type",
    "submissionResult": "Submission Result",
    "taskStatus": "Task Status",
    "progress": "Progress",
    "resultImage": "Result Image",
    "prompt": "Prompt",
    "promptEn": "PromptEn",
    "failureReason": "Failure Reason"
  },
  "analytics": "Analytics",
  "analytics_index": {
    "active": "Active",
    "averageLatency": "Average Latency",
    "channelCount": "Channel Count",
    "consumptionStatistics": "Consumption Statistics",
    "directRegistration": "Direct Registration",
    "disabled": "Disabled",
    "endTime": "End Time",
    "invitationRegistration": "Invitation Registration",
    "redeemCodeIssued": "Redeem Code Issued",
    "redemptionStatistics": "Redemption Statistics",
    "registrationStatistics": "Registration Statistics",
    "requestsCount": "Requests Count",
    "startTime": "Start Time",
    "testDisabled": "Test Disabled",
    "tokensStatistics": "Tokens Statistics",
    "totalUserBalance": "Total User Balance",
    "totalUserSpending": "Total User Spending",
    "totalUsers": "Total Users",
    "unused": "Unused",
    "used": "Used"
  },
  "channel": "Channel",
  "channel_index": {
    "actions": "Actions",
    "all": "All",
    "batchProcessing": "Batch Processing",
    "channel": "Channel",
    "channelList": "Channel List",
    "channelName": "Channel Name",
    "channelTags": "Channel Tags",
    "channelType": "Channel Type",
    "deleteDisabledChannels": "Delete Disabled Channels",
    "description1": "1. The larger the priority, the higher the priority of use; (only when all nodes under this priority are frozen or disabled, will the lower priority nodes be used)",
    "description2": "2. Under the same priority: Load balancing based on weight (weighted random selection)",
    "description3": "3. If 'Retry Times' and 'Retry Interval' are set in Settings - General Settings, retries will occur after a failure.",
    "description4": "4. Retry logic: 1) Retry in nodes with higher priority first. If all nodes in higher priority are frozen, retries will be attempted in nodes with lower priority. 2) If 'Retry Interval' is set, a channel will be frozen for a period after a failure, and no one will use this channel until the freezing time ends. 3) After the retry times are used up, it will end directly.",
    "disabled": "Disabled",
    "enabled": "Enabled",
    "filterTags": "Filter Tags",
    "group": "Group",
    "model": "Model",
    "modelName": "Model Name",
    "name": "Name",
    "newChannel": "New Channel",
    "otherParameters": "Other Parameters",
    "priority": "Priority",
    "priorityWeightExplanation": "Priority/Weight Explanation:",
    "refreshClearSearchConditions": "Refresh/Clear Search Conditions",
    "responseTime": "Response Time",
    "search": "Search",
    "showAll": "Show All",
    "speedTestDisabled": "Speed Test Disabled",
    "status": "Status",
    "supplier": "Supplier",
    "tags": "Tags",
    "testAllChannels": "Test All Channels",
    "testModel": "Test Model",
    "type": "Type",
    "updateEnabledBalance": "Update Enabled Balance",
    "usedBalance": "Used Balance/Remaining Balance",
    "weight": "Weight",
    "AzureApiVersion": "Azure version number",
    "batchAzureAPISuccess": "Successfully updated {{count}} pieces of data",
    "batchDelete": "Delete models in batches",
    "batchDeleteModel": "Please enter the full model name",
    "batchDeleteSuccess": "Successfully deleted {{count}} pieces of data",
    "batchDeleteTip": "If the channel has only one model, it will not be displayed. Please manually delete the channel from the list.",
    "inputAPIVersion": "Please enter the api version number",
    "replaceValue": "Replacement value",
    "selectAll": "select all",
    "unselectAll": "Anti-select all"
  },
  "dashboard": "Dashboard",
  "dashboard_index": {
    "balance": "Balance",
    "calls": "Calls",
    "model_name": "Model Name",
    "model_price": "Available Models",
    "no_data": "No Data",
    "no_data_available": "No data available",
    "other_models": "Other Models",
    "statistics": "Statistics",
    "today_consumption": "Today's Consumption",
    "today_requests": "Today's Requests",
    "today_tokens": "Today's Tokens",
    "unknown": "Unknown",
    "used": "Used"
  },
  "description": "All-in-one OpenAI interface\nIntegrates various API access methods\nOne-click deployment, ready to use",
  "footer": {
    "basedOn": "Based on",
    "developedBy": "Developed by",
    "license": "MIT License",
    "sourceCode": "Source code under"
  },
  "log": "Log",
  "login": {
    "password": "Password",
    "passwordRequired": "Password is required",
    "usernameOrEmail": "Username/Email",
    "usernameRequired": "Username/Email is required",
    "forgetPassword": "Forgot password?",
    "codeRequired": "verification code must be filled",
    "qrCode": "QR code",
    "wechatLoginInfo": "Please use WeChat to scan the QR code to follow the official account and enter the \"verification code\" to obtain the verification code (valid within three minutes)",
    "wechatVerificationCodeLogin": "WeChat verification code login",
    "githubCountError": "An error occurred, retrying {{count}}...",
    "githubError": "The operation failed and redirected to the login interface...",
    "githubLogin": "GitHub login",
    "larkLogin": "Feishu Login",
    "passwordRest": "Password reset confirmation",
    "useGithubLogin": "Log in using Github",
    "useLarkLogin": "Log in using Feishu",
    "useWechatLogin": "Log in with Wechat"
  },
  "menu": {
    "about": "About",
    "console": "Console",
    "error": "Error",
    "home": "Home",
    "login": "Login",
    "signout": "Signout",
    "signup": "Signup",
    "unknownVersion": "Unknown Version",
    "welcomeBack": "Welcome Back"
  },
  "model_price": "Model Price",
  "modelpricePage": {
    "model": "Model Name",
    "type": "Type",
    "channelType": "Supplier",
    "inputMultiplier": "Input Multiplier",
    "outputMultiplier": "Output Multiplier",
    "availableModels": "Available Models"
  },
  "payment": "Payment",
  "paymentPage": {
    "orderList": "Order List",
    "gatewaySettings": "Gateway Settings"
  },
  "paymentGatewayPage": {
    "title": "Payment Gateway",
    "createPayment": "Create Payment",
    "refreshClear": "Refresh/Clear Search Conditions",
    "search": "Search",
    "tableHeaders": {
      "id": "ID",
      "uuid": "UUID",
      "name": "Name",
      "type": "Type",
      "icon": "Icon",
      "fixedFee": "Fixed Fee",
      "percentFee": "Percent Fee",
      "sort": "Sort",
      "enable": "Enable",
      "createdAt": "Created At",
      "action": "Action"
    }
  },
  "orderlogPage": {
    "title": "Logs",
    "refreshClear": "Refresh/Clear Search Conditions",
    "search": "Search",
    "tableHeaders": {
      "created_at": "Time",
      "gateway_id": "Payment Gateway",
      "user_id": "User",
      "trade_no": "Order Number",
      "gateway_no": "Gateway Order Number",
      "amount": "Recharge Amount",
      "fee": "Fee",
      "discount": "Discount Amount",
      "order_amount": "Actual Payment Amount",
      "quota": "Credited Points",
      "status": "Status"
    },
    "gatewayIdLabel": "Gateway ID",
    "userIdLabel": "User ID",
    "tradeNoLabel": "Order Number",
    "gatewayNoLabel": "Gateway Order Number",
    "startTimeLabel": "Start Time",
    "endTimeLabel": "End Time",
    "statusLabel": "Status",
    "placeholder": {
      "gatewayId": "Gateway ID",
      "userId": "User ID",
      "tradeNo": "Order Number",
      "gatewayNo": "Gateway Order Number"
    },
    "statusOptions": {
      "status1": "Status 1",
      "status2": "Status 2",
      "status3": "Status 3"
    }
  },
  "pricing": "Pricing",
  "pricingPage": {
    "currencyInfo1": "USD",
    "currencyInfo2": ": 1 === $0.002 / 1K tokens",
    "currencyInfo3": "CNY",
    "currencyInfo4": ": 1 === ￥0.014 / 1k tokens",
    "currencyInfo5": "Example",
    "currencyInfo6": ": gpt-4 Input: $0.03 / 1K tokens Completion: $0.06 / 1K tokens",
    "currencyInfo7": "0.03 / 0.002 = 15, 0.06 / 0.002 = 30, input multiplier is 15, completion multiplier is 30",
    "noPriceModelWarning": "There are models without configured prices, please configure the prices in time:",
    "errPricesWarning": "There are models with incorrect supplier types, please configure them in time:",
    "newButton": "New",
    "refreshButton": "Refresh",
    "updatePricesButton": "Update Prices",
    "singleOperation": "Single Operation",
    "multipleOperation": "Multiple Operation",
    "ModelCount": "Number of models"
  },
  "profile": "Profile",
  "profilePage": {
    "personalInfo": "Personal Information",
    "username": "Username",
    "displayName": "Display Name",
    "password": "Password",
    "usernameRequired": "Username cannot be empty",
    "usernameMinLength": "Username must be at least 3 characters long",
    "passwordMinLength": "Password must be at least 8 characters long",
    "token": "Token",
    "wechatBindSuccess": "WeChat account successfully bound!",
    "updateSuccess": "User information updated successfully!",
    "notBound": "Not Bound",
    "inputUsernamePlaceholder": "Enter username",
    "inputPasswordPlaceholder": "Enter password",
    "inputDisplayNamePlaceholder": "Enter display name",
    "submit": "Submit",
    "other": "Other",
    "accountBinding": "Account Binding",
    "bindWechatAccount": "Bind WeChat Account",
    "bindGitHubAccount": "Bind GitHub Account",
    "bindLarkAccount": "Bind Lark Account",
    "changeEmail": "Change Email",
    "bindEmail": "Bind Email",
    "generateToken": "Generate Access Token",
    "resetToken": "Reset Access Token",
    "lark": "Lark",
    "tokenNotice": "Note: Tokens generated here are for system management, not for accessing OpenAI services.",
    "yourTokenIs": "Your access token is:",
    "keepSafe": "Keep it safe. Reset immediately if leaked.",
    "telegramBot": "Telegram bot",
    "telegramStep1": "1. Click the button below, the robot will open in Telegram, click /start to start.",
    "telegramStep2": "2. After sending the /bind command to the robot, enter the access token below to bind. \n(If it is not generated, please click the button below to generate it)"
  },
  "redemption": "Redemption",
  "setting": "Setting",
  "setting_index": {
    "operationSettings": {
      "chatLinkSettings": {
        "title": "Chat Link Settings",
        "info": "Configure chat links, which take effect in the chat of the token and in the chat of the Playground on the homepage. <br />In the link, &#123;key&#125; can replace the user's token, and &#123;server&#125; can replace the server address. For example: {'https://chat.oneapi.pro/#/?settings={\"key\":\"sk-{key}\",\"url\":\"{server}\"}'}<br />If not configured, the following 4 links will be configured by default:<br />ChatGPT Next ： {'https://chat.oneapi.pro/#/?settings={\"key\":\"{key}\",\"url\":\"{server}\"}'}<br />chatgpt-web-midjourney-proxy ： {'https://vercel.ddaiai.com/#/?settings={\"key\":\"{key}\",\"url\":\"{server}\"}'}<br />AMA ： {'ama://set-api-key?server={server}&key={key}'}<br />opencat ： {'opencat://team/join?domain={server}&token={key}'}<br />Sorting rules: The larger the value, the higher the ranking, and the same value is sorted according to the configuration order",
        "save": "Save Chat Link Settings"
      },
      "generalSettings": {
        "title": "General Settings",
        "topUpLink": {
          "label": "Top-up Link",
          "placeholder": "For example, the purchase link of the card issuing website"
        },
        "chatLink": {
          "label": "Chat Link",
          "placeholder": "For example, the deployment address of ChatGPT Next Web"
        },
        "quotaPerUnit": {
          "label": "Quota Per Unit",
          "placeholder": "The quota that can be exchanged for one unit of currency"
        },
        "retryTimes": {
          "label": "Retry Times",
          "placeholder": "Number of retries"
        },
        "retryCooldownSeconds": {
          "label": "Retry Cooldown (seconds)",
          "placeholder": "Retry cooldown (seconds)"
        },
        "displayInCurrency": "Display quota in currency",
        "displayTokenStat": "Show token quota instead of user quota for billing related APIs",
        "approximateToken": "Use approximate method to estimate token count to reduce computation",
        "saveButton": "Save General Settings"
      },
      "logSettings": {
        "title": "Log Settings",
        "logConsume": "Enable Log Consumption",
        "logCleanupTime": {
          "label": "Log Cleanup Time",
          "placeholder": "Log Cleanup Time"
        },
        "clearLogs": "Clear Historical Logs"
      },
      "monitoringSettings": {
        "title": "Monitoring Settings",
        "channelDisableThreshold": {
          "label": "Maximum Response Time",
          "placeholder": "In seconds, if all running channels exceed this time, the channel will be automatically disabled"
        },
        "quotaRemindThreshold": {
          "label": "Quota Reminder Threshold",
          "placeholder": "When below this quota, an email will be sent to remind the user"
        },
        "automaticDisableChannel": "Automatically Disable Channel on Failure",
        "automaticEnableChannel": "Automatically Enable Channel on Success",
        "saveMonitoringSettings": "Save Monitoring Settings"
      },
      "otherSettings": {
        "title": "Other Settings",
        "mjNotify": "Midjourney allows callbacks (will expose server IP address)",
        "chatCache": "Enable chat cache (if Redis is not enabled, it will be stored in the database)",
        "chatCacheExpireMinute": {
          "label": "Cache Expiry Time (minutes)",
          "placeholder": "Cache expiry time when caching is enabled"
        },
        "alert": "When users use the vision model and provide an image link, our server needs to download these images and calculate tokens. To protect the server's IP address from being exposed when downloading images, you can configure a proxy below. This proxy configuration uses HTTP or SOCKS5 proxy. If you are an individual user, you can ignore this configuration. The proxy format is http://127.0.0.1:1080 or socks5://127.0.0.1:1080",
        "chatImageRequestProxy": {
          "label": "Image Detection Proxy",
          "placeholder": "Chat image detection proxy settings, may leak server IP if not set"
        },
        "saveButton": "Save Other Settings",
        "CFWorkerImageUrl": {
          "alert": "Here is the image proxy address of Cloudflare Worker. You can use it by deploying https://github.com/MartialBE/get-image-by-cf. You can set only one of it and the image detection proxy. \nNote that some image links may deny CF access and cause detection failure.",
          "key": "Cloudflare Worker image proxy key, please ignore if not configured",
          "label": "Cloudflare Worker Image Proxy"
        }
      },
      "paymentSettings": {
        "title": "Payment Settings",
        "alert": "Payment Settings: <br />1. USD Exchange Rate: Used to calculate the amount of recharge in USD <br />2. Minimum Recharge Amount (USD): Minimum recharge amount, in USD, enter an integer <br />3. All pages are calculated in USD, and the actual currency paid by the user is converted according to the currency set by the payment gateway <br />For example: A gateway sets the currency as CNY, the user pays 100 USD, then the actual payment amount is 100 * USD exchange rate <br />B gateway sets the currency as USD, the user pays 100 USD, then the actual payment amount is 100 USD",
        "usdRate": {
          "label": "USD Exchange Rate",
          "placeholder": "e.g., 7.3"
        },
        "minAmount": {
          "label": "Minimum Recharge Amount (USD)",
          "placeholder": "e.g., 1, then the minimum recharge amount is 1 USD, please enter an integer"
        },
        "discountInfo": "Fixed Amount Recharge Discount Example: <br />It is a JSON text, the key is the recharge amount, and the value is the discount. For example, &#123;&quot;10&quot;:0.9&#125; means that a recharge of 10 USD is calculated at a 10% discount <br />Calculation formula: actual cost = (original value * discount + original value * discount * fee rate) * exchange rate",
        "discount": {
          "label": "Fixed Amount Recharge Discount",
          "placeholder": "It is a JSON text, the key is the recharge amount, and the value is the discount"
        },
        "save": "Save Payment Settings"
      },
      "quotaSettings": {
        "title": "Quota Settings",
        "quotaForNewUser": {
          "label": "Initial Quota for New Users",
          "placeholder": "e.g., 100"
        },
        "preConsumedQuota": {
          "label": "Pre-consumed Quota for Requests",
          "placeholder": "Adjustable after the request ends"
        },
        "quotaForInviter": {
          "label": "Reward Quota for Inviter",
          "placeholder": "e.g., 2000"
        },
        "quotaForInvitee": {
          "label": "Reward Quota for Invitee",
          "placeholder": "e.g., 1000"
        },
        "saveQuotaSettings": "Save Quota Settings"
      },
      "rateSettings": {
        "title": "Rate Settings",
        "groupRatio": {
          "label": "Group Ratio",
          "placeholder": "It is a JSON text, the key is the group name, and the value is the ratio"
        },
        "save": "Save Rate Settings"
      },
      "title": "Operation Settings"
    },
    "otherSettings": {
      "title": "Other Settings",
      "generalSettings": {
        "title": "General Settings",
        "currentVersion": "Current Version",
        "checkUpdate": "Check Update",
        "noticeLabel": "Notice",
        "noticePlaceholder": "Enter new notice content here, supports Markdown & HTML code",
        "saveNotice": "Save Notice"
      },
      "customSettings": {
        "title": "Personalization Settings",
        "systemNameLabel": "System Name",
        "systemNamePlaceholder": "Enter system name here",
        "setSystemName": "Set System Name",
        "logoLabel": "Logo Image URL",
        "logoPlaceholder": "Enter Logo Image URL here",
        "setLogo": "Set Logo",
        "homePageContentLabel": "Home Page Content",
        "homePageContentPlaceholder": "Enter home page content here, supports Markdown & HTML code. Once set, the home page status information will no longer be displayed. If a link is entered, it will be used as the src attribute of the iframe, allowing you to set any web page as the home page.",
        "saveHomePageContent": "Save Home Page Content",
        "aboutLabel": "About",
        "aboutPlaceholder": "Enter new about content here, supports Markdown & HTML code. If a link is entered, it will be used as the src attribute of the iframe, allowing you to set any web page as the about page.",
        "saveAbout": "Save About",
        "copyrightWarning": "Removing the One Hub copyright must be authorized first. Maintaining the project requires a lot of effort. If this project is meaningful to you, please support it.",
        "footerLabel": "Footer Settings",
        "footerPlaceholder": "Enter new footer here, leave blank to use the default footer, supports HTML code",
        "setFooter": "Set Footer"
      },
      "updateDialog": {
        "newVersion": "New Version",
        "close": "Close",
        "viewGitHub": "View on GitHub"
      }
    },
    "systemSettings": {
      "configureEmailDomainWhitelist": {
        "title": "Configure Email Domain Whitelist",
        "subTitle": "Prevent malicious users from registering with temporary email addresses",
        "emailDomainRestriction": "Enable Email Domain Whitelist",
        "allowedEmailDomains": "Allowed Email Domains",
        "save": "Save Email Domain Whitelist Settings"
      },
      "configureFeishuAuthorization": {
        "title": "Configure Feishu Authorization",
        "subTitle": "To support login and registration via Feishu.",
        "manageLink": "Click here",
        "manage": "Manage your Feishu app",
        "alert1": "Enter Homepage URL",
        "alert2": "and Redirect URL",
        "appId": "App ID",
        "appIdPlaceholder": "Enter App ID",
        "appSecret": "App Secret",
        "appSecretPlaceholder": "Sensitive information will not be sent to the frontend",
        "saveButton": "Save Feishu OAuth Settings"
      },
      "configureGitHubOAuthApp": {
        "title": "Configure GitHub OAuth App",
        "subTitle": "To support login and registration via GitHub.",
        "manageLink": "Click here",
        "manage": "Manage your GitHub OAuth App",
        "alert1": "Enter Homepage URL",
        "alert2": "and Authorization callback URL",
        "clientId": "GitHub Client ID",
        "clientSecret": "GitHub Client Secret",
        "clientIdPlaceholder": "Enter the ID of your registered GitHub OAuth App",
        "clientSecretPlaceholder": "Sensitive information will not be sent to the frontend",
        "saveButton": "Save GitHub OAuth Settings"
      },
      "configureLoginRegister": {
        "title": "Configure Login and Register",
        "passwordLogin": "Allow Password Login",
        "passwordRegister": "Allow Password Register",
        "emailVerification": "Email Verification Required for Password Register",
        "gitHubOAuth": "Allow Login & Register via GitHub",
        "weChatAuth": "Allow Login & Register via WeChat",
        "larkAuth": "Allow Login & Register via Lark",
        "registerEnabled": "Allow New User Registration (Disabling this will prevent any new registrations)",
        "turnstileCheck": "Enable Turnstile User Verification"
      },
      "configureSMTP": {
        "title": "Configure SMTP",
        "subTitle": "Support system email sending",
        "alert": "Please note, some email providers include your server IP address in sent emails. For non-personal use, consider using a professional email service provider.",
        "smtpServer": "SMTP Server Address",
        "smtpServerPlaceholder": "e.g., smtp.qq.com",
        "smtpPort": "SMTP Port",
        "smtpPortPlaceholder": "Default: 587",
        "smtpAccount": "SMTP Account",
        "smtpAccountPlaceholder": "Usually your email address",
        "smtpFrom": "SMTP Sender Email",
        "smtpFromPlaceholder": "Usually matches your email address",
        "smtpToken": "SMTP Access Token",
        "smtpTokenPlaceholder": "Sensitive information will not be sent to the frontend",
        "save": "Save SMTP Settings"
      },
      "configureTurnstile": {
        "title": "Configure Turnstile",
        "subTitle": "To support user verification.",
        "manageLink": "Click here",
        "manage": "Manage your Turnstile Sites, recommend selecting Invisible Widget Type.",
        "siteKey": "Turnstile Site Key",
        "siteKeyPlaceholder": "Enter your registered Turnstile Site Key",
        "secretKey": "Turnstile Secret Key",
        "secretKeyPlaceholder": "Sensitive information will not be sent to the frontend",
        "saveButton": "Save Turnstile Settings"
      },
      "configureWeChatServer": {
        "title": "Configure WeChat Server",
        "subTitle": "To support login and registration via WeChat.",
        "learnLink": "Click here",
        "learn": "Learn about WeChat Server",
        "serverAddress": "WeChat Server Server Address",
        "serverAddressPlaceholder": "e.g., https://yourdomain.com",
        "accessToken": "WeChat Server Access Token",
        "accessTokenPlaceholder": "Sensitive information will not be sent to the frontend",
        "qrCodeImage": "WeChat Official Account QR Code Image Link",
        "qrCodeImagePlaceholder": "Enter an image link",
        "saveButton": "Save WeChat Server Settings"
      },
      "generalSettings": {
        "title": "System Settings",
        "serverAddress": "Server Address",
        "serverAddressPlaceholder": "e.g., https://yourdomain.com",
        "updateServerAddress": "Update Server Address"
      },
      "title": "System Settings"
    }
  },
  "telegramPage": {
    "title": "Telegram Bot Menu",
    "createMenu": "Create",
    "reloadMenu": "Reload Menu",
    "searchPlaceholder": "Search ID and command...",
    "refresh": "Refresh",
    "online": "Online(Webhook)",
    "offline": "Offline(Polling)",
    "reloadSuccess": "Reload successful!",
    "operationSuccess": "Operation successfully completed!",
    "infoMessage": "After adding or modifying menu commands/descriptions (you do not need to reload if you have not modified commands and descriptions), you need to reload the menu to take effect. If you do not see the new menu, try killing the backend and restarting the program.",
    "id": "ID",
    "command": "Command",
    "description": "Description",
    "replyType": "Reply Type",
    "replyContent": "Reply Content",
    "action": "Action"
  },
  "token": "Token",
  "token_index": {
    "actions": "Actions",
    "cancel": "Cancel",
    "chat": "Chat",
    "close": "Close",
    "confirmDeleteToken": "Are you sure you want to delete this token?",
    "copy": "Copy",
    "createToken": "Create Token",
    "createdTime": "Created Time",
    "delete": "Delete",
    "deleteToken": "Delete Token",
    "editToken": "Edit Token",
    "enableCache": "Enable Cache (Enabling this will cache chat history to reduce cost)",
    "expiryTime": "Expiry Time",
    "invalidDate": "Invalid date",
    "name": "Name",
    "neverExpires": "Never Expires",
    "quota": "Quota",
    "quotaNote": "Note: The token's quota is only used to limit the maximum usage of the token itself, actual usage is subject to the remaining quota of the account.",
    "refresh": "Refresh",
    "remainingQuota": "Remaining Quota",
    "replaceApiAddress1": "Replace the OpenAI API base address https://api.openai.com with",
    "replaceApiAddress2": ", and you can use the key below.",
    "searchTokenName": "Search for token name...",
    "status": "Status",
    "submit": "Submit",
    "token": "Token",
    "unlimited": "Unlimited",
    "unlimitedQuota": "Unlimited Quota",
    "usedQuota": "Used Quota"
  },
  "topup": "Top-up",
  "user": "User",
  "userPage": {
    "editUser": "Edit User",
    "createUser": "Create User",
    "username": "Username",
    "usernameRequired": "Username is required",
    "displayName": "Display Name",
    "password": "Password",
    "passwordRequired": "Password is required",
    "quota": "Quota",
    "quotaMin": "Quota cannot be less than 0",
    "group": "Group",
    "groupRequired": "Group is required",
    "saveSuccess": "Saved successfully!",
    "cancel": "Cancel",
    "submit": "Submit",
    "users": "Users",
    "searchPlaceholder": "Search for user ID, username, group, display name, or email address...",
    "refresh": "Refresh",
    "operationSuccess": "Operation successfully completed!",
    "id": "ID",
    "statistics": "Statistics",
    "userRole": "User Role",
    "bind": "Bind",
    "creationTime": "Creation Time",
    "status": "Status",
    "action": "Action",
    "adminUserRole": "administrator",
    "cUserRole": "general user",
    "cancelAdmin": "Cancel administrator",
    "del": "delete users",
    "delTip": "Whether to delete the user",
    "setAdmin": "Set as administrator",
    "superAdminRole": "super administrator",
    "uUserRole": "Unknown identity",
    "useQuota": "Number of requests"
  },
  "CheckUpdatesTable": {
    "checkUpdates": "Check Updates",
    "url": "URL",
    "fetchData": "Fetch Data",
    "noUpdates": "No Updates",
    "newModels": "New Models",
    "priceChangeModels": "Price Change Models (for reference only, ignore if you have modified the prices yourself)",
    "note": "Note",
    "overwriteOrAddOnly": "You can choose to overwrite or add only new models. If you choose to overwrite, it will delete the prices of the models you added yourself and use the remote configuration completely. If you choose to add only new models, it will only add the prices of the new models.",
    "overwriteData": "Overwrite Data",
    "addNewOnly": "Add New Only",
    "cancel": "Cancel",
    "dataFormatIncorrect": "Data format is incorrect",
    "pleaseFetchData": "Please fetch data first",
    "noNewModels": "No new models",
    "operationCompleted": "Operation completed successfully!",
    "inputMultiplierChanged": "Input multiplier changed from",
    "to": "to",
    "outputMultiplierChanged": "Output multiplier changed from"
  },
  "channel_edit": {
    "addSuccess": "Created successfully!",
    "batchAdd": "Add in batches",
    "customModelTip": "Customize: Click or press Enter to enter",
    "editSuccess": "update completed!",
    "modelListError": "Failed to get model list",
    "batchBaseurlTip": ", one per line, the order corresponds to the following keys. If the corresponding key cannot be matched, the first one will be used by default.",
    "batchKeytip": ", one key per line",
    "inputAllModel": "Fill in all models",
    "inputChannelModel": "Fill in the channel support model",
    "isEnable": "Whether to enable",
    "requiredBaseUrl": "Channel API address cannot be empty",
    "requiredChannel": "Channel cannot be empty",
    "requiredGroup": "User group cannot be empty",
    "requiredKey": "Key cannot be empty",
    "requiredModels": "Model cannot be empty",
    "requiredName": "Name is required",
    "validJson": "Must be a valid JSON string"
  },
  "common": {
    "cancel": "Cancel",
    "create": "create",
    "delete": "delete",
    "edit": "edit",
    "noData": "No data",
    "submit": "submit",
    "verificationCode": "Verification code",
    "close": "closure",
    "saveSuccess": "Saved successfully!",
    "unknown": "unknown",
    "again": "Retry ({{count}})",
    "back": "return",
    "bindOk": "Binding successful!",
    "copyUrl": "Copy address",
    "downImg": "Download pictures",
    "imgUrl": "The map's address",
    "loginOk": "login successful!",
    "newWindos": "open in a new window",
    "none": "none",
    "processing": "Processing...",
    "registerOk": "registration success!",
    "registerTip": "The verification code was sent successfully, please check your email!",
    "serverError": "Server Error",
    "show": "show",
    "unableServer": "Unable to connect to the server properly!",
    "unableServerTip": "New version available: {{version}}, please use the shortcut key Shift F5 to refresh the page",
    "disable": "disabled",
    "enable": "activated",
    "exhaust": "exhausted",
    "expired": "expired",
    "link": "Link"
  },
  "error": {
    "unknownError": "unknown mistake"
  },
  "channel_row": {
    "auto": "automatic",
    "canModels": "Available models:",
    "channelWeb": "Official website",
    "clickUpdateQuota": "Click to update balance",
    "delChannel": "Delete channel",
    "delChannelInfo": "Whether to delete the channel",
    "delTag": "Delete tag",
    "manual": "Manual",
    "modelTestSuccess": "Channel {{channel}}: {{model}} tested successfully and took {{time}} seconds.",
    "modelTestTip": "Please set up the test model first",
    "onlyChat": "Only supports chat model",
    "otherArg": "Other parameters:",
    "priorityTip": "Priority cannot be less than 0",
    "proxy": "Agent address:",
    "test": "test",
    "testModels": "Speed ​​test model:",
    "weightTip": "Weight cannot be less than 1",
    "delChannelCount": "Removed all disabled channels, {{count}} in total",
    "delTagInfo1": "Whether to delete the label",
    "delTagInfo2": "⚠️ Note: This operation will delete the channel.",
    "testAllChannel": "Testing of all channels has been started successfully, please refresh the page to view the results.",
    "updateChannelBalance": "All enabled channel balances have been updated!",
    "updateOk": "update completed!"
  },
  "payment_edit": {
    "FixedTip": "A fixed handling fee is charged for each payment, in USD",
    "addOk": "Created successfully!",
    "currencyTip": "What currency does this gateway charge? Please check the corresponding gateway documentation.",
    "currencyType": "Gateway currency type",
    "notifyDomain": "Callback domain name",
    "notifyDomainTip": "The domain name for payment callback. Unless you have configured it yourself, keep it empty.",
    "paymentEdit": "Edit payment",
    "paymentType": "Payment Types",
    "percentTip": "Each payment is charged a handling fee based on a percentage. If it is 5%, please fill in 0.05",
    "requiredCurrency": "Currency cannot be empty",
    "requiredFixedFee": "Fixed handling fee cannot be less than 0",
    "requiredIcon": "Icon cannot be empty",
    "requiredPercentFee": "Percentage fee cannot be less than 0",
    "updateOk": "update completed!"
  },
  "payment_row": {
    "delPayment": "Delete payment",
    "delPaymentTip": "Whether to delete payment",
    "sortTip": "Sort cannot be less than 0"
  },
  "pricing_edit": {
    "channelType": "Channel type",
    "channelTypeErr": "Channel type error",
    "model": "Model",
    "modelTip": "Please select the model supported by the price. You can also enter the wildcard character * to match the model, for example: gpt-3.5*, which means that all models starting with gpt-3.5 are supported. The * sign can only be used in the last digit, and there must be characters in front of it. \n, for example: gpt-3.5* is correct, *gpt-3.5 is wrong",
    "name": "name",
    "requiredChannelType": "Channel type cannot be empty",
    "requiredInput": "Input magnification cannot be empty",
    "requiredModels": "Model cannot be empty",
    "requiredOutput": "Output magnification cannot be empty",
    "requiredType": "Type cannot be empty",
    "type": "type",
    "typeErr": "type error",
    "channelTypeErr2": "The channel type is wrong",
    "delGroup": "Delete price group",
    "delGroupTip": "Delete price group?",
    "delInfoTip": "Are you sure you want to delete {{name}}?",
    "delTip": "confirm delete?",
    "inputVal": "The input magnification must be greater than or equal to 0",
    "modelNameRe": "Model names cannot be repeated",
    "outputVal": "The output magnification must be greater than or equal to 0",
    "requiredModelName": "Model name cannot be empty",
    "saveOk": "Saved successfully",
    "typeCheck": "The type can only be tokens or times"
  },
  "redemption_edit": {
    "addOk": "Redemption code created successfully!",
    "editOk": "Redemption code updated successfully!",
    "number": "quantity",
    "requiredCount": "Must be greater than or equal to 1",
    "requiredQuota": "Must be greater than or equal to 0"
  },
  "telegram_edit": {
    "addOk": "Menu created successfully!",
    "msgInfo": "Message content",
    "msgType": "Message type",
    "requiredCommand": "command cannot be empty",
    "requiredDes": "Description cannot be empty",
    "requiredMes": "Message content cannot be empty",
    "requiredParseMode": "Message type cannot be empty",
    "updateOk": "Menu updated successfully!"
  },
  "validation": {
    "requiredName": "Name is required"
  },
  "auth": {
    "invalidLink": "Invalid link",
    "newPassword": "New Password",
    "newPasswordEdit": "Please change your password promptly after logging in",
    "newPasswordInfo": "Your new password is:",
    "restPassword": "reset Password",
    "restPasswordClick": "Click to reset password"
  },
  "home": {
    "loadingErr": "Failed to load homepage content..."
  },
  "jump": "Redirecting...",
  "res_time": {
    "lastTime": "Last speed test time:",
    "noTest": "Not tested",
    "second": "Second",
    "testClick": "Click speed test (only supports chat model)"
  },
  "ui-component": {
    "allModels": "View all models",
    "modelName": "Model name"
  },
  "task": "Asynchronous tasks",
  "AZURE_OPENAI_ENDPOINT": "AZURE_OPENAI_ENDPOINT",
  "仅支持聊天": "Chat only",
  "从Cohere获取模型列表": "Get list of models from Cohere",
  "从Deepseek获取模型列表": "Get model list from Deepseek",
  "从Gemini获取模型列表": "Get model list from Gemini",
  "从Groq获取模型列表": "Get list of models from Groq",
  "从Mistral获取模型列表": "Get model list from Mistral",
  "从Moonshot获取模型列表": "Get model list from Moonshot",
  "从OpenAI获取模型列表": "Get model list from OpenAI",
  "从渠道获取模型列表": "Get model list from channel",
  "代理地址": "proxy address",
  "位置/区域": "location/area",
  "你可以为你的渠道打一个标签，打完标签后，可以通过标签进行批量管理渠道": "You can add a label to your channel. After labeling, you can manage channels in batches through the label.",
  "其他参数": "Other parameters",
  "单独设置代理地址，支持http和socks5，例如：http://127.0.0.1:1080": "Set the proxy address separately, support http and socks5, for example: http://127.0.0.1:1080",
  "可空，请输入中转API地址，例如通过cloudflare中转": "Can be left empty, please enter the transfer API address, for example, through cloudflare transfer",
  "地址填写Suno-API部署的地址": "Address: Fill in the address of Suno-API deployment",
  "地址填写midjourney-proxy部署的地址": "Address: fill in the address of midjourney-proxy deployment",
  "如果选择了仅支持聊天，那么遇到有函数调用的请求会跳过该渠道": "If you choose to support chat only, the channel will be skipped when encountering requests with function calls.",
  "密钥": "key",
  "密钥填写Suno-API的密钥，如果没有设置密钥，可以随便填": "Fill in the key of Suno-API for the key. If there is no key set, you can fill it in casually.",
  "密钥填写midjourney-proxy的密钥，如果没有设置密钥，可以随便填": "The key is the key of midjourney-proxy. If the key is not set, you can fill it in casually.",
  "必须填写所有数据后才能获取模型列表": "All data must be filled in to get the model list",
  "按照如下格式输入：APIKey-AppId，例如：fastgpt-0sp2gtvfdgyi4k30jwlgwf1i-64f335d84283f05518e9e041": "Enter in the following format: APIKey-AppId, for example: fastgpt-0sp2gtvfdgyi4k30jwlgwf1i-64f335d84283f05518e9e041",
  "按照如下格式输入：APIKey|SecretKey": "Enter according to the following format: APIKey|SecretKey",
  "按照如下格式输入：APISecret|groupID": "Enter it in the following format: APISecret|groupID",
  "按照如下格式输入：APPID|APISecret|APIKey": "Enter it in the following format: APPID|APISecret|APIKey",
  "按照如下格式输入：AppId|SecretId|SecretKey": "Enter it in the following format: AppId|SecretId|SecretKey",
  "按照如下格式输入：CLOUDFLARE_ACCOUNT_ID|CLOUDFLARE_API_TOKEN": "Enter it in the following format: CLOUDFLARE_ACCOUNT_ID|CLOUDFLARE_API_TOKEN",
  "按照如下格式输入：Region|AccessKeyID|SecretAccessKey|SessionToken 其中SessionToken可不填空": "Enter it in the following format: Region|AccessKeyID|SecretAccessKey|SessionToken. SessionToken can be left blank.",
  "按照如下格式输入：SecretId|SecretKey": "Enter it in the following format: SecretId|SecretKey",
  "插件参数": "Plug-in parameters",
  "替换 API 版本": "Replace API version",
  "标签": "Label",
  "模型": "Model",
  "模型名称为coze-{bot_id}，你也可以直接使用 coze-* 通配符来匹配所有coze开头的模型": "The model name is coze-{bot_id}. You can also directly use coze-* wildcards to match all models starting with coze.",
  "模型名称映射， 你可以取一个容易记忆的名字来代替coze-{bot_id}，例如：{\"coze-translate\": \"coze-xxxxx\"},注意：如果使用了模型映射，那么上面的模型名称必须使用映射前的名称，上述例子中，你应该在模型中填入coze-translate(如果已经使用了coze-*，可以忽略)。": "Model name mapping, you can replace coze-{bot_id} with an easy-to-remember name, for example: {\"coze-translate\": \"coze-xxxxx\"}. Note: If model mapping is used, the above model name must \nUse the name before mapping. In the above example, you should fill in coze-translate in the model (you can ignore it if coze-* is already used).",
  "模型映射关系": "Model mapping relationship",
  "测速模型": "speed model",
  "渠道API地址": "Channel API address",
  "渠道名称": "Channel name",
  "渠道类型": "Channel type",
  "版本号": "version number",
  "用于测试使用的模型，为空时无法测速,如：gpt-3.5-turbo，仅支持chat模型": "The model used for testing cannot measure speed when empty. For example: gpt-3.5-turbo, only supports chat model.",
  "用户组": "user group",
  "请为渠道命名": "Please name the channel",
  "请参考wiki中的文档获取key. https://github.com/MartialBE/one-hub/wiki/VertexAI": "Please refer to the documentation in the wiki to obtain the key. https://github.com/MartialBE/one-hub/wiki/VertexAI",
  "请填写AZURE_OPENAI_ENDPOINT": "Please fill in AZURE_OPENAI_ENDPOINT",
  "请输入你 Speech Studio 的位置/区域，例如：eastasia": "Please enter the location/region of your Speech Studio, for example: eastasia",
  "请输入你部署的Ollama地址，例如：http://127.0.0.1:11434，如果你使用了cloudflare Zero Trust，可以在下方插件填入授权信息": "Please enter the Ollama address you deployed, for example: http://127.0.0.1:11434. If you use cloudflare Zero Trust, you can fill in the authorization information in the plug-in below.",
  "请输入插件参数，即 X-DashScope-Plugin 请求头的取值": "Please enter the plug-in parameters, that is, the value of the X-DashScope-Plugin request header",
  "请输入渠道对应的鉴权密钥": "Please enter the authentication key corresponding to the channel",
  "请输入版本号，例如：v1": "Please enter the version number, for example: v1",
  "请输入版本号，例如：v3[1]": "Please enter the version number, for example: v3.1",
  "请输入要修改的模型映射关系，格式为：api请求模型ID:实际转发给渠道的模型ID，使用JSON数组表示，例如：{\"gpt-3.5-turbo-16k\": \"gpt-3.5-turbo-16k-0613\"}": "Please enter the model mapping relationship to be modified. The format is: api request model ID: the model ID actually forwarded to the channel, represented by a JSON array, for example: {\"gpt-3.5-turbo-16k\": \"gpt-3.5-turbo- \n16k-0613\"}",
  "请输入默认API版本，例如：2024-05-01-preview": "Please enter the default API version, for example: 2024-05-01-preview",
  "请选择渠道类型": "Please select channel type",
  "请选择该渠道所支持的模型,你也可以输入通配符*来匹配模型，例如：gpt-3.5*，表示支持所有gpt-3.5开头的模型，*号只能在最后一位使用，前面必须有字符，例如：gpt-3.5*是正确的，*gpt-3.5是错误的": "Please select the model supported by this channel. You can also enter the wildcard character * to match the model. For example: gpt-3.5*, which means that all models starting with gpt-3.5 are supported. The * sign can only be used in the last digit, and there must be characters in front of it. \n, for example: gpt-3.5* is correct, *gpt-3.5 is wrong",
  "请选择该渠道所支持的用户组": "Please select the user group supported by this channel",
  "请随意填写": "Please feel free to fill in",
  "输入后，会替换请求地址中的v1，例如：freeapi，则请求chat时会变成https://xxx.com/freeapi/chat/completions,如果需要禁用版本号，请输入 disable": "After input, v1 in the request address will be replaced. For example: freeapi, when requesting chat, it will become https://xxx.com/freeapi/chat/completions. If you need to disable the version number, please enter disable",
  "默认 API 版本": "Default API version",
  "Header 配置": "Header configuration",
  "alloy 映射": "alloy mapping",
  "echo 映射": "echo mapping",
  "fable 映射": "fable mapping",
  "nova 映射": "nova mapping",
  "onyx 映射": "onyx mapping",
  "shimmer 映射": "shimmer mapping",
  "代码执行": "code execution",
  "使用代码执行功能，开启后，计算tokens不准确，建议个人使用开启": "When using the code execution function, the calculation of tokens is inaccurate after it is turned on. It is recommended that individuals use it to turn it on.",
  "使用网页搜索功能，对用户输入的内容进行搜索": "Use the web search function to search for content entered by the user",
  "启用": "enable",
  "声音映射": "sound mapping",
  "将OpenAI的声音角色映射到azure的声音角色, 如果有role，请用|隔开，例如zh-CN-YunxiNeural|boy": "Map OpenAI's voice role to Azure's voice role. If there is a role, please separate it with |, for example, zh-CN-YunxiNeural|boy",
  "当涉及到知识库ID时，请前往开放平台的知识库模块进行创建或获取(是知识库ID不是文档ID！)": "When it comes to the knowledge base ID, please go to the knowledge base module of the open platform to create or obtain it (it is the knowledge base ID, not the document ID!)",
  "是否启用代码执行": "Whether to enable code execution",
  "是否启用网页搜索": "Whether to enable web search",
  "本配置主要是用于使用cloudflare Zero Trust将端口暴露到公网时，需要配置的header": "This configuration is mainly used for the headers that need to be configured when using cloudflare Zero Trust to expose the port to the public network.",
  "知识库": "knowledge base",
  "知识库ID": "Knowledge base ID",
  "知识库模板": "Knowledge base template",
  "网页搜索": "web search",
  "请前往开放平台的知识库上传文档，然后使用知识库功能进行检索。": "Please go to the knowledge base of the open platform to upload documents, and then use the knowledge base function to search.",
  "请求模型时的知识库模板, 请查看文档填写，否则不用填写": "Knowledge base template when requesting a model, please check the document to fill it in, otherwise there is no need to fill it in",
  "默认 zh-CN-XiaochenNeural": "Default zh-CN-XiaochenNeural",
  "默认 zh-CN-XiaohanNeural": "Default zh-CN-XiaohanNeural",
  "默认 zh-CN-YunxiNeural": "Default zh-CN-YunxiNeural",
  "默认 zh-CN-YunxiNeural|boy": "Default zh-CN-YunxiNeural|boy",
  "默认 zh-CN-YunyangNeural": "Default zh-CN-YunyangNeural",
  "默认 zh-CN-YunyeNeural": "Default zh-CN-YunyeNeural",
  "suno": {
    "lyrics": "lyrics",
    "music": "Audio",
    "response": "response body",
    "video": "video"
  },
  "taskPage": {
    "channel": "channel",
    "fail": "Reason for failure",
    "finishTime": "Complete time",
    "platform": "platform",
    "progress": "schedule",
    "status": "Task status (click to view results)",
    "subTime": "Submission time",
    "task": "Task ID",
    "time": "time consuming",
    "type": "type",
    "user": "user"
  }
}
